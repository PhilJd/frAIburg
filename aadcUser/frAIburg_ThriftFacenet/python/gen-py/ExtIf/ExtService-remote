#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from ExtIf import ExtService
from ExtIf.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string ping(string sender)'
  print '   GeAvailableNames()'
  print '  TObjectResultList rawData(TransportDef transport_def, TDataRaw raw_data, TImageParams params)'
  print '  bool IsStopped()'
  print '  void AddPerson(TDataRaw raw_data, TImageParams params)'
  print '  void DriveToPerson(string name)'
  print '  void GoalReached()'
  print '  bool StartDriving()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ExtService.Client(protocol)
transport.open()

if cmd == 'ping':
  if len(args) != 1:
    print 'ping requires 1 args'
    sys.exit(1)
  pp.pprint(client.ping(args[0],))

elif cmd == 'GeAvailableNames':
  if len(args) != 0:
    print 'GeAvailableNames requires 0 args'
    sys.exit(1)
  pp.pprint(client.GeAvailableNames())

elif cmd == 'rawData':
  if len(args) != 3:
    print 'rawData requires 3 args'
    sys.exit(1)
  pp.pprint(client.rawData(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'IsStopped':
  if len(args) != 0:
    print 'IsStopped requires 0 args'
    sys.exit(1)
  pp.pprint(client.IsStopped())

elif cmd == 'AddPerson':
  if len(args) != 2:
    print 'AddPerson requires 2 args'
    sys.exit(1)
  pp.pprint(client.AddPerson(eval(args[0]),eval(args[1]),))

elif cmd == 'DriveToPerson':
  if len(args) != 1:
    print 'DriveToPerson requires 1 args'
    sys.exit(1)
  pp.pprint(client.DriveToPerson(args[0],))

elif cmd == 'GoalReached':
  if len(args) != 0:
    print 'GoalReached requires 0 args'
    sys.exit(1)
  pp.pprint(client.GoalReached())

elif cmd == 'StartDriving':
  if len(args) != 0:
    print 'StartDriving requires 0 args'
    sys.exit(1)
  pp.pprint(client.StartDriving())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
