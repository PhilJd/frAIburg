#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from newservice import NewService
from newservice.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string ping(string s1)'
  print '   get_all_names()'
  print '  bool add_person(TAppDataRaw raw_data, TImageParams params)'
  print '  bool remove_person(string s)'
  print '  bool drive_to(string s1)'
  print '  bool start_driving()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = NewService.Client(protocol)
transport.open()

if cmd == 'ping':
  if len(args) != 1:
    print 'ping requires 1 args'
    sys.exit(1)
  pp.pprint(client.ping(args[0],))

elif cmd == 'get_all_names':
  if len(args) != 0:
    print 'get_all_names requires 0 args'
    sys.exit(1)
  pp.pprint(client.get_all_names())

elif cmd == 'add_person':
  if len(args) != 2:
    print 'add_person requires 2 args'
    sys.exit(1)
  pp.pprint(client.add_person(eval(args[0]),eval(args[1]),))

elif cmd == 'remove_person':
  if len(args) != 1:
    print 'remove_person requires 1 args'
    sys.exit(1)
  pp.pprint(client.remove_person(args[0],))

elif cmd == 'drive_to':
  if len(args) != 1:
    print 'drive_to requires 1 args'
    sys.exit(1)
  pp.pprint(client.drive_to(args[0],))

elif cmd == 'start_driving':
  if len(args) != 0:
    print 'start_driving requires 0 args'
    sys.exit(1)
  pp.pprint(client.start_driving())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
